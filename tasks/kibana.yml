---
# Online install
- name: online install | download kibana
  get_url: url=https://download.elasticsearch.org/kibana/kibana/kibana-{{ kibana_version }}.tar.gz dest=/var/tmp/kibana-{{ kibana_version }}.tar.gz
  when: kibana_online_install
- name: online install | extract kibana installation
  unarchive: src=/var/tmp/kibana-{{ kibana_version }}.tar.gz copy=no dest={{ kibana_base_install_dir }}/ mode=0700 creates={{ kibana_base_install_dir }}/kibana-{{ kibana_version }}/index.html
  when: kibana_online_install

# Offline Install
- name: offline install | copy and extract kibana installation
  unarchive: src={{ kibana_installer_path }} dest={{ kibana_base_install_dir }}/ mode=0700 creates={{ kibana_base_install_dir }}/kibana-{{ kibana_version }}/index.html
  when: not kibana_online_install

# Override elasticsearch url
- name: set path to elasticsearch
  lineinfile: "dest={{ kibana_base_install_dir }}/kibana-{{ kibana_version }}/config.js regexp='^    elasticsearch' line='    elasticsearch: \"{{ kibana_elasticsearch_url }}\",'"

# Set permissions for kibana dir
- name: grant directory permissions to nginx user for kibana installation directory
  file: path={{ kibana_base_install_dir }}/kibana-{{ kibana_version }} owner=nginx group=nginx recurse=true

# Configure nginx for kibana
- name: install kibana virtual server configuration
  template: src=kibana.conf.j2 dest={{ nginx_base_install_dir }}/nginx/conf/servers/kibana.conf owner=nginx group=nginx
  notify:
  - restart nginx
- name: install kibana authentication for nginx
  copy: src={{ item }} dest={{ nginx_base_install_dir }}/nginx/conf/servers/{{ item }} owner=nginx group=nginx
  with_items:
    - kibana.htpasswd
    - kibana-write.htpasswd
- name: install kibana virtual server certificates
  copy: src={{ item }} dest={{ nginx_base_install_dir }}/nginx/conf/ssl/{{ item }} owner=nginx group=nginx
  with_items:
    - example.com.crt
    - example.com.key
  notify:
    - restart nginx
